{
  "info": {
    "_postman_id": "c127d330-c7b5-4f77-b87f-f412124a9d3c",
    "name": "Awesome Pizza",
    "description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables for Awesome Pizza API.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "14359446"
  },
  "item": [
    {
      "name": "Get all orders",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{jwt_admin}}",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/order/get-all",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "order",
            "get-all"
          ]
        },
        "description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
      },
      "response": []
    },
    {
      "name": "Get order by id",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{jwt_admin}}",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/order/1",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "order",
            "1"
          ]
        },
        "description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
      },
      "response": []
    },
    {
      "name": "Delete order",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{base_url}}/order/11",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "order",
            "11"
          ]
        },
        "description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
      },
      "response": []
    },
    {
      "name": "Get next order",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{jwt_pizzamaker}}",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/order/next-order",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "order",
            "next-order"
          ]
        },
        "description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
      },
      "response": []
    },
    {
      "name": "start order",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{jwt_pizzamaker}}",
              "type": "string"
            }
          ]
        },
        "method": "PUT",
        "header": [],
        "url": {
          "raw": "{{base_url}}/order/start-order",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "order",
            "start-order"
          ]
        },
        "description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
      },
      "response": []
    },
    {
      "name": "finish order",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{jwt_pizzamaker}}",
              "type": "string"
            }
          ]
        },
        "method": "PUT",
        "header": [],
        "url": {
          "raw": "{{base_url}}/order/finish-order",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "order",
            "finish-order"
          ]
        },
        "description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
      },
      "response": []
    },
    {
      "name": "Get order status",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "GET",
        "header": [
          {
            "key": "",
            "value": "",
            "type": "text",
            "disabled": true
          }
        ],
        "url": {
          "raw": "{{base_url}}/order/get-order-status/1",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "order",
            "get-order-status",
            "1"
          ]
        },
        "description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
      },
      "response": []
    },
    {
      "name": "Save order",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Successful POST request\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
              "});",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n\t\"address\": {\n        \"town\": \"Milano\",\n        \"street\": \"via Leonardo 5\",\n        \"zip\" : \"20053\"\n    },\n    \"customerName\" : \"Marco\",\n    \"customerSurname\" : \"Brulleti\",\n    \"phoneNumber\" : \"+39 123 456 7894\",\n    \"pizzaComboList\" : [\n        {\n            \"premadePizza\" : {\n                \"name\" : \"Margherita\",\n                \"id\" : 1\n            },\n            \"pizzaSize\" : \"LARGE\",\n            \"extras\" : [\n                {\n                    \"name\" : \"Pepperoni\",\n                    \"id\" : 1\n                }\n            ]\n        },\n                {\n            \"premadePizza\" : {\n                \"name\" : \"Margherita\",\n                \"id\" : 1\n            },\n            \"pizzaSize\" : \"LARGE\",\n            \"extras\" : [\n                {\n                    \"name\" : \"Pepperoni\",\n                    \"id\" : 1\n                }\n            ]\n        },\n                {\n            \"premadePizza\" : {\n                \"name\" : \"Margherita\",\n                \"id\" : 1\n            },\n            \"pizzaSize\" : \"LARGE\",\n            \"extras\" : [\n                {\n                    \"name\" : \"Pepperoni\",\n                    \"id\" : 1\n                }\n            ]\n        }\n    ]\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/order",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "order"
          ]
        },
        "description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
      },
      "response": []
    },
    {
      "name": "Sign up",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Successful POST request\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
              "});",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"login\": \"pizzamaker2\",\n  \"password\": \"supersafepassword\",\n  \"role\": \"PIZZAMAKER\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/auth/signup",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "auth",
            "signup"
          ]
        },
        "description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
      },
      "response": []
    },
    {
      "name": "Sign In",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Successful POST request\", function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
              "});",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"login\": \"pizzamaker\",\n  \"password\": \"supersafepassword\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/auth/signin",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "auth",
            "signin"
          ]
        },
        "description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
      },
      "response": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "id",
      "value": "1"
    },
    {
      "key": "base_url",
      "value": "http://localhost:8080/api"
    },
    {
      "key": "jwt_admin",
      "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhZG1pbiIsInVzZXJuYW1lIjoiYWRtaW4iLCJleHAiOjE3MTIxNTQzOTV9.3fpNpH0mgLvhN_8OkK7b9mXcMVHkz1zrRnqV32gmAJ4",
      "type": "string"
    },
    {
      "key": "jwt_pizzamaker",
      "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJwaXp6YW1ha2VyIiwidXNlcm5hbWUiOiJwaXp6YW1ha2VyIiwiZXhwIjoxNzEyMTU0NDIwfQ.AVgJIl-tM-zwXY_vXQnil78vrsXWGCSFb9gRyqsqeLo",
      "type": "string"
    }
  ]
}